#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkKS.Business
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShortedLink")]
	public partial class LinkKSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLINK(LINK instance);
    partial void UpdateLINK(LINK instance);
    partial void DeleteLINK(LINK instance);
    partial void InsertLINK_LOG(LINK_LOG instance);
    partial void UpdateLINK_LOG(LINK_LOG instance);
    partial void DeleteLINK_LOG(LINK_LOG instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    #endregion
		
		public LinkKSDataContext() : 
				base(global::LinkKS.Business.Properties.Settings.Default.ShortedLinkConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinkKSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinkKSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinkKSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinkKSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LINK> LINKs
		{
			get
			{
				return this.GetTable<LINK>();
			}
		}
		
		public System.Data.Linq.Table<LINK_LOG> LINK_LOGs
		{
			get
			{
				return this.GetTable<LINK_LOG>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LINK")]
	public partial class LINK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _ShortLink;
		
		private string _LongLink;
		
		private System.Guid _UserID;
		
		private System.DateTime _CreatedDate;
		
		private string _Password;
		
		private bool _Notification;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private bool _OneShot;
		
		private byte _Status;
		
		private EntitySet<LINK_LOG> _LINK_LOGs;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnShortLinkChanging(string value);
    partial void OnShortLinkChanged();
    partial void OnLongLinkChanging(string value);
    partial void OnLongLinkChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNotificationChanging(bool value);
    partial void OnNotificationChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnOneShotChanging(bool value);
    partial void OnOneShotChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public LINK()
		{
			this._LINK_LOGs = new EntitySet<LINK_LOG>(new Action<LINK_LOG>(this.attach_LINK_LOGs), new Action<LINK_LOG>(this.detach_LINK_LOGs));
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortLink", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string ShortLink
		{
			get
			{
				return this._ShortLink;
			}
			set
			{
				if ((this._ShortLink != value))
				{
					this.OnShortLinkChanging(value);
					this.SendPropertyChanging();
					this._ShortLink = value;
					this.SendPropertyChanged("ShortLink");
					this.OnShortLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongLink", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LongLink
		{
			get
			{
				return this._LongLink;
			}
			set
			{
				if ((this._LongLink != value))
				{
					this.OnLongLinkChanging(value);
					this.SendPropertyChanging();
					this._LongLink = value;
					this.SendPropertyChanged("LongLink");
					this.OnLongLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notification", DbType="Bit NOT NULL")]
		public bool Notification
		{
			get
			{
				return this._Notification;
			}
			set
			{
				if ((this._Notification != value))
				{
					this.OnNotificationChanging(value);
					this.SendPropertyChanging();
					this._Notification = value;
					this.SendPropertyChanged("Notification");
					this.OnNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OneShot", DbType="Bit NOT NULL")]
		public bool OneShot
		{
			get
			{
				return this._OneShot;
			}
			set
			{
				if ((this._OneShot != value))
				{
					this.OnOneShotChanging(value);
					this.SendPropertyChanging();
					this._OneShot = value;
					this.SendPropertyChanged("OneShot");
					this.OnOneShotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINK_LINK_LOG", Storage="_LINK_LOGs", ThisKey="ID", OtherKey="LinkID")]
		public EntitySet<LINK_LOG> LINK_LOGs
		{
			get
			{
				return this._LINK_LOGs;
			}
			set
			{
				this._LINK_LOGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_LINK", Storage="_USER", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.LINKs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.LINKs.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LINK_LOGs(LINK_LOG entity)
		{
			this.SendPropertyChanging();
			entity.LINK = this;
		}
		
		private void detach_LINK_LOGs(LINK_LOG entity)
		{
			this.SendPropertyChanging();
			entity.LINK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LINK_LOG")]
	public partial class LINK_LOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _LinkID;
		
		private System.DateTime _Date_;
		
		private string _Referer;
		
		private string _Agent;
		
		private EntityRef<LINK> _LINK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnLinkIDChanging(System.Guid value);
    partial void OnLinkIDChanged();
    partial void OnDate_Changing(System.DateTime value);
    partial void OnDate_Changed();
    partial void OnRefererChanging(string value);
    partial void OnRefererChanged();
    partial void OnAgentChanging(string value);
    partial void OnAgentChanged();
    #endregion
		
		public LINK_LOG()
		{
			this._LINK = default(EntityRef<LINK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LinkID
		{
			get
			{
				return this._LinkID;
			}
			set
			{
				if ((this._LinkID != value))
				{
					if (this._LINK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinkIDChanging(value);
					this.SendPropertyChanging();
					this._LinkID = value;
					this.SendPropertyChanged("LinkID");
					this.OnLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_", DbType="DateTime NOT NULL")]
		public System.DateTime Date_
		{
			get
			{
				return this._Date_;
			}
			set
			{
				if ((this._Date_ != value))
				{
					this.OnDate_Changing(value);
					this.SendPropertyChanging();
					this._Date_ = value;
					this.SendPropertyChanged("Date_");
					this.OnDate_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Referer
		{
			get
			{
				return this._Referer;
			}
			set
			{
				if ((this._Referer != value))
				{
					this.OnRefererChanging(value);
					this.SendPropertyChanging();
					this._Referer = value;
					this.SendPropertyChanged("Referer");
					this.OnRefererChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agent", DbType="VarChar(200)")]
		public string Agent
		{
			get
			{
				return this._Agent;
			}
			set
			{
				if ((this._Agent != value))
				{
					this.OnAgentChanging(value);
					this.SendPropertyChanging();
					this._Agent = value;
					this.SendPropertyChanged("Agent");
					this.OnAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINK_LINK_LOG", Storage="_LINK", ThisKey="LinkID", OtherKey="ID", IsForeignKey=true)]
		public LINK LINK
		{
			get
			{
				return this._LINK.Entity;
			}
			set
			{
				LINK previousValue = this._LINK.Entity;
				if (((previousValue != value) 
							|| (this._LINK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LINK.Entity = null;
						previousValue.LINK_LOGs.Remove(this);
					}
					this._LINK.Entity = value;
					if ((value != null))
					{
						value.LINK_LOGs.Add(this);
						this._LinkID = value.ID;
					}
					else
					{
						this._LinkID = default(System.Guid);
					}
					this.SendPropertyChanged("LINK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[USER]")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _EMail;
		
		private string _Password;
		
		private string _Name;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntitySet<LINK> _LINKs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public USER()
		{
			this._LINKs = new EntitySet<LINK>(new Action<LINK>(this.attach_LINKs), new Action<LINK>(this.detach_LINKs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_LINK", Storage="_LINKs", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<LINK> LINKs
		{
			get
			{
				return this._LINKs;
			}
			set
			{
				this._LINKs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LINKs(LINK entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_LINKs(LINK entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
}
#pragma warning restore 1591
